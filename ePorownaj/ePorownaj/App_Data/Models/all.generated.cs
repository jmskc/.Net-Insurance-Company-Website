using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "3ea2e75508590c85")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Article</summary>
	[PublishedContentModel("article")]
	public partial class Article : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "article";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Article(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Article, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Artykuł: Napisz artykuł odnoszący się do historii oraz motywacji firmy, a także cele na przyszłość.
		///</summary>
		[ImplementPropertyType("oNasArtykul")]
		public IHtmlString ONasArtykul
		{
			get { return this.GetPropertyValue<IHtmlString>("oNasArtykul"); }
		}

		///<summary>
		/// Imię i Nazwisko: Wprowadź imię i nazwisko.
		///</summary>
		[ImplementPropertyType("profil1ImieINazwisko")]
		public string Profil1ImieInazwisko
		{
			get { return this.GetPropertyValue<string>("profil1ImieINazwisko"); }
		}

		///<summary>
		/// Adres email: Wprowadź adres email.
		///</summary>
		[ImplementPropertyType("profile1AdresEmail")]
		public string Profile1AdresEmail
		{
			get { return this.GetPropertyValue<string>("profile1AdresEmail"); }
		}

		///<summary>
		/// Numer telefonu: Wprowadź numer telefonu.
		///</summary>
		[ImplementPropertyType("profile1NumerTelefonu")]
		public string Profile1NumerTelefonu
		{
			get { return this.GetPropertyValue<string>("profile1NumerTelefonu"); }
		}

		///<summary>
		/// O mnie: Napisz kilka słów o sobie.
		///</summary>
		[ImplementPropertyType("profile1OMnie")]
		public string Profile1Omnie
		{
			get { return this.GetPropertyValue<string>("profile1OMnie"); }
		}

		///<summary>
		/// Stanowisko: Wprowadź stanowisko.
		///</summary>
		[ImplementPropertyType("profile1Stanowisko")]
		public string Profile1Stanowisko
		{
			get { return this.GetPropertyValue<string>("profile1Stanowisko"); }
		}

		///<summary>
		/// Zdjęcie: UWAGA! Należy wybrać zdjęcie o rozmarze w proporcji 1:1. W przeciwnym wypadku wpłynie to negatywnie na wygląd strony.
		///</summary>
		[ImplementPropertyType("profile1Zdjecie")]
		public IPublishedContent Profile1Zdjecie
		{
			get { return this.GetPropertyValue<IPublishedContent>("profile1Zdjecie"); }
		}

		///<summary>
		/// Adres email: Wprowadź adres email.
		///</summary>
		[ImplementPropertyType("profile2AdresEmail")]
		public string Profile2AdresEmail
		{
			get { return this.GetPropertyValue<string>("profile2AdresEmail"); }
		}

		///<summary>
		/// Imię i Nazwisko: Wprowadź imię i nazwisko.
		///</summary>
		[ImplementPropertyType("profile2ImieINazwisko")]
		public string Profile2ImieInazwisko
		{
			get { return this.GetPropertyValue<string>("profile2ImieINazwisko"); }
		}

		///<summary>
		/// Numer telefonu: Wprowadź numer telefonu.
		///</summary>
		[ImplementPropertyType("profile2NumerTelefonu")]
		public string Profile2NumerTelefonu
		{
			get { return this.GetPropertyValue<string>("profile2NumerTelefonu"); }
		}

		///<summary>
		/// O mnie: Napisz kilka słów o sobie.
		///</summary>
		[ImplementPropertyType("profile2OMnie")]
		public string Profile2Omnie
		{
			get { return this.GetPropertyValue<string>("profile2OMnie"); }
		}

		///<summary>
		/// Stanowisko: Wprowadź stanowisko.
		///</summary>
		[ImplementPropertyType("profile2Stanowisko")]
		public string Profile2Stanowisko
		{
			get { return this.GetPropertyValue<string>("profile2Stanowisko"); }
		}

		///<summary>
		/// Zdjęcie: UWAGA! Należy wybrać zdjęcie o rozmarze w proporcji 1:1. W przeciwnym wypadku wpłynie to negatywnie na wygląd strony.
		///</summary>
		[ImplementPropertyType("profile2Zdjecie")]
		public IPublishedContent Profile2Zdjecie
		{
			get { return this.GetPropertyValue<IPublishedContent>("profile2Zdjecie"); }
		}
	}

	/// <summary>Car</summary>
	[PublishedContentModel("car")]
	public partial class Car : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "car";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Car(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Car, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Artykuł: Napisz krótki artykuł o ubezpieczeniu samochodu.
		///</summary>
		[ImplementPropertyType("oNasArtykul")]
		public IHtmlString ONasArtykul
		{
			get { return this.GetPropertyValue<IHtmlString>("oNasArtykul"); }
		}
	}

	/// <summary>Company</summary>
	[PublishedContentModel("company")]
	public partial class Company : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "company";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Company(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Company, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Artykuł: Napisz krótki artykuł o ubezpieczeniu dla firmy.
		///</summary>
		[ImplementPropertyType("oNasArtykul")]
		public IHtmlString ONasArtykul
		{
			get { return this.GetPropertyValue<IHtmlString>("oNasArtykul"); }
		}
	}

	/// <summary>Contact</summary>
	[PublishedContentModel("contact")]
	public partial class Contact : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contact";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contact(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contact, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Artykuł: Napisz krótki artykuł zapraszający do kontaktu.
		///</summary>
		[ImplementPropertyType("oNasArtykul")]
		public IHtmlString ONasArtykul
		{
			get { return this.GetPropertyValue<IHtmlString>("oNasArtykul"); }
		}
	}

	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Facebook: Link do frimowego profilu na facebook.com
		///</summary>
		[ImplementPropertyType("facebookLink")]
		public string FacebookLink
		{
			get { return this.GetPropertyValue<string>("facebookLink"); }
		}

		///<summary>
		/// Firma: Wprowadź krótką zajawkę zachęcającą do ubezpieczenia firmy.
		///</summary>
		[ImplementPropertyType("firmaZajawka")]
		public string FirmaZajawka
		{
			get { return this.GetPropertyValue<string>("firmaZajawka"); }
		}

		///<summary>
		/// Inwestycje: Wprowadź krótką zajawkę zachęcającą do inwestycji.
		///</summary>
		[ImplementPropertyType("inwestycjeZajawka")]
		public string InwestycjeZajawka
		{
			get { return this.GetPropertyValue<string>("inwestycjeZajawka"); }
		}

		///<summary>
		/// Tytuł: Wprowadź krótką frazę aby zachęcić klienta do kontaktu.
		///</summary>
		[ImplementPropertyType("kontaktTytul")]
		public string KontaktTytul
		{
			get { return this.GetPropertyValue<string>("kontaktTytul"); }
		}

		///<summary>
		/// Tytuł: Wprowadź tytuł który zostanie wyświetlony w nagłówku.
		///</summary>
		[ImplementPropertyType("naglowekTytul")]
		public string NaglowekTytul
		{
			get { return this.GetPropertyValue<string>("naglowekTytul"); }
		}

		///<summary>
		/// Zajawka: Wprowadź krótką zajawkę odnoszącą się do tytułu w nagłówku.
		///</summary>
		[ImplementPropertyType("naglowekZajawka")]
		public string NaglowekZajawka
		{
			get { return this.GetPropertyValue<string>("naglowekZajawka"); }
		}

		///<summary>
		/// Nasi partnerzy: Dodaj logo firmy parnerskiej. Aby osiągnąć najlepszy efekt, dodaj logo z przezroczystym tłem (.PNG).
		///</summary>
		[ImplementPropertyType("nasiPartnerzy")]
		public IEnumerable<IPublishedContent> NasiPartnerzy
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("nasiPartnerzy"); }
		}

		///<summary>
		/// Nieruchomości: Wprowadź krótką zajawkę zachęcającą do ubezpieczenia nieruchomości.
		///</summary>
		[ImplementPropertyType("nieruchomosciZajawka")]
		public string NieruchomosciZajawka
		{
			get { return this.GetPropertyValue<string>("nieruchomosciZajawka"); }
		}

		///<summary>
		/// Numer telefonu: Wprowadź numer telefonu, który zostanie wyświetlony w sekcji - Kontakt.
		///</summary>
		[ImplementPropertyType("numerTelefonu")]
		public string NumerTelefonu
		{
			get { return this.GetPropertyValue<string>("numerTelefonu"); }
		}

		///<summary>
		/// Zajawka: Króka zajawka odnosząca się do opini klientów o współpracy z firmą.
		///</summary>
		[ImplementPropertyType("opinieZajawka")]
		public string OpinieZajawka
		{
			get { return this.GetPropertyValue<string>("opinieZajawka"); }
		}

		///<summary>
		/// Pozycja 1: Imię i Nazwisko: Wprowadź Imię i Nazwisko osoby dającej opinię.
		///</summary>
		[ImplementPropertyType("pozycja1ImieINazwisko")]
		public string Pozycja1ImieInazwisko
		{
			get { return this.GetPropertyValue<string>("pozycja1ImieINazwisko"); }
		}

		///<summary>
		/// Pozycja 1: Opinia: Wprowadź opinię.
		///</summary>
		[ImplementPropertyType("pozycja1Opinia")]
		public string Pozycja1Opinia
		{
			get { return this.GetPropertyValue<string>("pozycja1Opinia"); }
		}

		///<summary>
		/// Pozycja 1: Stanowsko oraz firma: Wprowadź stanowsko oraz nazwę firmy którą reprezentuje osoba dająca opinie.
		///</summary>
		[ImplementPropertyType("pozycja1StanowskoOrazFirma")]
		public string Pozycja1StanowskoOrazFirma
		{
			get { return this.GetPropertyValue<string>("pozycja1StanowskoOrazFirma"); }
		}

		///<summary>
		/// Pozycja 1: Zdjęcie: UWAGA! Zdjęcie powinno posiadać wymiary o proporcji 1:1. W przeciwnym wypadku wpłynie to negatywnie na wygląd strony.
		///</summary>
		[ImplementPropertyType("pozycja1Zdjecie")]
		public IPublishedContent Pozycja1Zdjecie
		{
			get { return this.GetPropertyValue<IPublishedContent>("pozycja1Zdjecie"); }
		}

		///<summary>
		/// Pozycja 2: Imię i Nazwisko: Wprowadź Imię i Nazwisko osoby dającej opinię.
		///</summary>
		[ImplementPropertyType("pozycja2ImieINazwisko")]
		public string Pozycja2ImieInazwisko
		{
			get { return this.GetPropertyValue<string>("pozycja2ImieINazwisko"); }
		}

		///<summary>
		/// Pozycja 2: Opinia: Wprowadź opinię.
		///</summary>
		[ImplementPropertyType("pozycja2Opinia")]
		public string Pozycja2Opinia
		{
			get { return this.GetPropertyValue<string>("pozycja2Opinia"); }
		}

		///<summary>
		/// Pozycja 2: Stanowisko oraz firma: Wprowadź stanowsko oraz nazwę firmy którą reprezentuje osoba dająca opinie.
		///</summary>
		[ImplementPropertyType("pozycja2StanowiskoOrazFirma")]
		public string Pozycja2StanowiskoOrazFirma
		{
			get { return this.GetPropertyValue<string>("pozycja2StanowiskoOrazFirma"); }
		}

		///<summary>
		/// Pozycja 2: Zdjęcie: UWAGA! Zdjęcie powinno posiadać wymiary o proporcji 1:1. W przeciwnym wypadku wpłynie to negatywnie na wygląd strony.
		///</summary>
		[ImplementPropertyType("pozycja2Zdjecie")]
		public IPublishedContent Pozycja2Zdjecie
		{
			get { return this.GetPropertyValue<IPublishedContent>("pozycja2Zdjecie"); }
		}

		///<summary>
		/// Pozycja 3: Imię i Nazwisko: Wprowadź Imię i Nazwisko osoby dającej opinię.
		///</summary>
		[ImplementPropertyType("pozycja3ImieINazwisko")]
		public string Pozycja3ImieInazwisko
		{
			get { return this.GetPropertyValue<string>("pozycja3ImieINazwisko"); }
		}

		///<summary>
		/// Pozycja 3: Opinia: Wprowadź opinię.
		///</summary>
		[ImplementPropertyType("pozycja3Opinia")]
		public string Pozycja3Opinia
		{
			get { return this.GetPropertyValue<string>("pozycja3Opinia"); }
		}

		///<summary>
		/// Pozycja 3: Stanowisko oraz firma: Wprowadź stanowsko oraz nazwę firmy którą reprezentuje osoba dająca opinie.
		///</summary>
		[ImplementPropertyType("pozycja3StanowiskoOrazFirma")]
		public string Pozycja3StanowiskoOrazFirma
		{
			get { return this.GetPropertyValue<string>("pozycja3StanowiskoOrazFirma"); }
		}

		///<summary>
		/// Pozycja 3: Zdjęcie: UWAGA! Zdjęcie powinno posiadać wymiary o proporcji 1:1. W przeciwnym wypadku wpłynie to negatywnie na wygląd strony.
		///</summary>
		[ImplementPropertyType("pozycja3Zdjecie")]
		public IPublishedContent Pozycja3Zdjecie
		{
			get { return this.GetPropertyValue<IPublishedContent>("pozycja3Zdjecie"); }
		}

		///<summary>
		/// Samochód: Wprowadź krótką zajawkę zachęcającą do ubezpieczenia samochodu.
		///</summary>
		[ImplementPropertyType("samochodZajawka")]
		public string SamochodZajawka
		{
			get { return this.GetPropertyValue<string>("samochodZajawka"); }
		}

		///<summary>
		/// Życie: Wprowadź krótką zajawkę zachęcającą do ubezpieczenia na życie.
		///</summary>
		[ImplementPropertyType("zycieZajawka")]
		public string ZycieZajawka
		{
			get { return this.GetPropertyValue<string>("zycieZajawka"); }
		}
	}

	/// <summary>Life</summary>
	[PublishedContentModel("life")]
	public partial class Life : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "life";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Life(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Life, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Artykuł: Napisz krótki artykuł o ubezpieczeniu na życie.
		///</summary>
		[ImplementPropertyType("oNasArtykul")]
		public IHtmlString ONasArtykul
		{
			get { return this.GetPropertyValue<IHtmlString>("oNasArtykul"); }
		}
	}

	/// <summary>Profile</summary>
	[PublishedContentModel("profile")]
	public partial class Profile : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "profile";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Profile(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Profile, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Adres email: Wprowadź adres email.
		///</summary>
		[ImplementPropertyType("profileAdresEmail")]
		public string ProfileAdresEmail
		{
			get { return this.GetPropertyValue<string>("profileAdresEmail"); }
		}

		///<summary>
		/// Imię i Nazwisko: Wprowadź imię i nazwisko.
		///</summary>
		[ImplementPropertyType("profileImieINazwisko")]
		public string ProfileImieInazwisko
		{
			get { return this.GetPropertyValue<string>("profileImieINazwisko"); }
		}

		///<summary>
		/// Numer telefonu: Wprowadź numer telefonu.
		///</summary>
		[ImplementPropertyType("profileNumerTelefonu")]
		public string ProfileNumerTelefonu
		{
			get { return this.GetPropertyValue<string>("profileNumerTelefonu"); }
		}

		///<summary>
		/// O mnie: Napisz kilka słów o sobie.
		///</summary>
		[ImplementPropertyType("profileOMnie")]
		public string ProfileOmnie
		{
			get { return this.GetPropertyValue<string>("profileOMnie"); }
		}

		///<summary>
		/// Stanowisko: Wprowadź stanowisko w firmie.
		///</summary>
		[ImplementPropertyType("profileStanowisko")]
		public string ProfileStanowisko
		{
			get { return this.GetPropertyValue<string>("profileStanowisko"); }
		}

		///<summary>
		/// Zdjęcie: UWAGA! Zdjęcie powinno mieć proporcje równe 1:1, w przeciwnym wypadku pogorszy to wygląd strony.
		///</summary>
		[ImplementPropertyType("profileZdjecie")]
		public IPublishedContent ProfileZdjecie
		{
			get { return this.GetPropertyValue<IPublishedContent>("profileZdjecie"); }
		}
	}

	/// <summary>Property</summary>
	[PublishedContentModel("property")]
	public partial class Property : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "property";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Property(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Property, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Artykuł: Napisz artykuł o ubezpieczeniu nieruchomości.
		///</summary>
		[ImplementPropertyType("oNasArtykul")]
		public IHtmlString ONasArtykul
		{
			get { return this.GetPropertyValue<IHtmlString>("oNasArtykul"); }
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
